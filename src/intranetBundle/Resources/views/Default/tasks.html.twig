{% extends 'intranetBundle::layout.html.twig' %}

 {% block contenido %}

        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
        <link rel="stylesheet" href="http://ajax.googleapis.com/ajax/libs/angular_material/1.0.0/angular-material.min.css">
        <link rel="stylesheet" href="taskStyles.css">
        <script src="moment.min.js"></script>

        <script>
            var app = angular.module('MyApp',['ngRoute', 'ngMaterial', 'ngMessages', 'material.svgAssetsCache', 'ngMdIcons']);
            app.config(function($interpolateProvider){
                $interpolateProvider.startSymbol('{[{').endSymbol('}]}');
            });
            app.controller('tasksController', tasksController);
            app.controller('updateTaskDialogController', updateTaskDialogController);
            app.controller('createTaskDialogController', createTaskDialogController);

            function tasksController($scope, $mdDialog, $http){
                var dataFromServer = ("{{listTasks | json_encode()}}").replace(/&quot;/g, "");

                dataFromServer = dataFromServer.replace("[[", "");
                dataFromServer = dataFromServer.replace("]]", "");
                dataFromServer = dataFromServer.split("],[");

                
                $scope.userRol = ("{{rol | json_encode()}}").replace(/&quot;/g, "");
                $scope.userLogin = ("{{userLogin | json_encode()}}").replace(/&quot;/g, "");

                $scope.tasks = [];

                $scope.isLoading = false;

                for (var i = 0; i < dataFromServer.length; i++){
                    $scope.tasks.push(dataFromServer[i].split(','));
                }

                //TaskTemplates/mainDialogTask.tmpl.html
                $scope.showUpdateTaskDialog = function(ev, task) {

                    $mdDialog.show({
                        templateUrl: "{{path('intranet_main_task_dialog2')}}",
                        locals: {
                            currentTask: task,
                            rol: $scope.userRol
                        },
                        parent: angular.element(document.body),
                        targetEvent: ev,
                        clickOutsideToClose: true,
                        controller: updateTaskDialogController,
                        onRemoving: ($scope.userRol != "developer") ? $scope.getAllTasks : null
                    });
                }

                $scope.showCreateTaskDialog = function(ev) {

                    $mdDialog.show({
                        templateUrl: "{{path('intranet_main_task_dialog2')}}",
                        parent: angular.element(document.body),
                        targetEvent: ev,
                        clickOutsideToClose: true,
                        controller: createTaskDialogController,
                        onRemoving: $scope.getAllTasks
                    });
                }

                $scope.getTasksOfUser = function(){

                    $http({
                        method: 'GET',
                        url: window.location.pathname+'/../../api/users/'+$scope.userLogin+'/tasks',
                        dataType: 'json',
                        headers: {'Content-Type': 'application/json'}
                    })
                    .then(function success(response){

                        $scope.tasksList = response.data;
                        console.log($scope.tasksList);
                    }, function error(response){
                        console.log("Error:" +response.statusText);
                    });
                }

                $scope.getAllTasks = function(){

                    $http({
                        method: 'GET',
                        url: window.location.pathname+'/../../api/tasks',
                        dataType: 'json',
                        headers: {'Content-Type': 'application/json'}
                    })
                    .then(function success(response){

                        $scope.tasksList = response.data;
                    }, function error(response){
                        console.log("Error:" +response.statusText);
                    });
                }

                $scope.deleteTask = function(ev, task){
                    $mdDialog.show({
                        templateUrl: "{{path('intranet_delete_dialog')}}",
                        locals: {
                            currentTask: task
                        },
                        parent: angular.element(document.body),
                        targetEvent: ev,
                        clickOutsideToClose: true,
                        controller: deleteTaskDialogController,
                        onRemoving: $scope.getAllTasks
                    });
                }
            }

            function createTaskDialogController($scope, $mdDialog, $http, $mdToast){

                $listChecked=[];

                $scope.getInfo = function(){

                    $http({
                        method: 'GET',
                        url: window.location.pathname+'/../../api/users/all/onboard',
                        dataType: 'json',
                        headers: {'Content-Type': 'application/json'}
                    })
                    .then(function success(response){
                        $scope.allUsers = response.data;
                    }, function error(response){
                        console.log("Error:" +response.statusText);
                    });
                };

                $scope.closeDialog = function() {
                    $mdDialog.hide();
                };

                $scope.alreadyIn = function(user){
                    return ($listChecked).indexOf(user.login) > -1;
                };

                $scope.toggle = function(user){
                    var index = ($listChecked).indexOf(user.login);

                    if (index > -1){
                        ($listChecked).splice(index, 1);
                    }
                    else{
                        ($listChecked).push(user.login);
                    }
                    //console.log($listChecked);
                };

                $scope.create=function(){

                //We must see if another task exists already with the same attributes
                $http({
                        method: 'GET',
                        url: window.location.pathname+'/../../api/tasks',
                        dataType: 'json',
                        headers: {'Content-Type': 'application/json'}
                    })
                    .then(function success(response){
                        $scope.tasksListB = response.data;
                        $flag_all=0;
                        for (i = 0; i < $scope.tasksListB.length; i++) {
                            //console.log($scope.tasksListB[i].title);
                            if($scope.tasksListB[i].title!=$scope.allData.taskData[0].title){
                                $scope.title=$scope.tasksListB[i].title;
                                $flag_all+=1;
                            }else{break;}
                        }
                        if($flag_all==$scope.tasksListB.length){
                            $notID=-1;
                                $http({
                                    method: 'POST',
                                    url: window.location.pathname+'/../../api/tasks/'+$notID,
                                    data: {
                                        title: $scope.allData.taskData[0].title,
                                        content: $scope.allData.taskData[0].content,
                                        usersInTask: $listChecked
                                    },
                                    contentType: 'application/json',
                                    dataType: 'json',
                                    headers: {'Content-Type': 'application/json'}
                                })
                                .then(function success(response){

                                    $scope.closeDialog();
                                }, function error(response){
                                    //console.log("Error:" +response.statusText);
                                });
                        }else{$scope.showSimpleToast();}
                    }, function error(response){
                        console.log("Error:" +response.statusText);
                    });
                };

                var last = {
                    bottom: false,
                    top: true,
                    left: false,
                    right: true
                  };

                  $scope.toastPosition = angular.extend({},last);

                  $scope.getToastPosition = function() {
                    return Object.keys($scope.toastPosition)
                      .filter(function(pos) { return $scope.toastPosition[pos]; })
                      .join(' ');
                  };

                  $scope.showSimpleToast = function() {

                    var pinTo = $scope.getToastPosition();
                    $mdToast.show(
                      $mdToast.simple()
                        .textContent('{% trans %}YA EXISTE UNA TAREA LLAMADO {% endtrans %} '+$scope.title)
                        .position(pinTo )
                        .hideDelay(5000)
                    );
                  };
            }

            function updateTaskDialogController($scope, $mdDialog, $http, currentTask, rol){

                $scope.userRol = rol;
                $scope.task = currentTask;
                $scope.loading = false;

                $scope.getInfo = function(){

                    //AJAX call requesting the task info, its list of users and the list of all users in the database.
                    $http({
                        method: 'GET',
                        url: window.location.pathname+'/../../api/tasks/'+$scope.task.id+'/users',
                        dataType: 'json',
                        headers: {'Content-Type': 'application/json'}
                    })
                    .then(function success(response){

                        $scope.allData = {
                            "taskData": response.data.taskData,
                            "taskUsers": $.map(response.data.usersInTask, function(elem){return elem.login}),
                            "allUsers": response.data.allUsers
                        };
                        console.log($scope.allData.taskData);
                        $scope.allUsers = $scope.allData.allUsers;
                        $scope.usersInTaskShownToDeveloper = $scope.allData.allUsers.filter(function(user){

                            if (($scope.allData.taskUsers).indexOf(user.login) > -1)
                                return user;
                        });

                    }, function error(response){
                        console.log("Error:" +response.statusText);
                    });
                };

                $scope.closeDialog = function() {
                    $mdDialog.hide();
                };

                $scope.alreadyIn = function(user){

                    return ($scope.allData.taskUsers).indexOf(user.login) > -1;
                };

                $scope.toggle = function(user){

                    var index = ($scope.allData.taskUsers).indexOf(user.login);

                    if (index > -1)
                        ($scope.allData.taskUsers).splice(index, 1);
                    else
                        ($scope.allData.taskUsers).push(user.login);
                };

                $scope.update = function($id){

                    $scope.loading = true;

                    $http({
                        method: 'PATCH',
                        url: window.location.pathname+'/../../api/tasks/'+$id,
                        data: {
                            title: $scope.allData.taskData[0].title,
                            content: $scope.allData.taskData[0].content,
                            usersInTask: $scope.allData.taskUsers
                        },
                        contentType: 'application/json',
                        dataType: 'json',
                        headers: {'Content-Type': 'application/json'}
                    })
                    .then(function success(response){

                        //TODO
                        /*if("error de validación")
                            //toast informando del error
                        else*/
                            $scope.closeDialog();
                    }, function error(response){
                        console.log("Error:" +response.statusText);
                    });
                };

                //DEPRECATED
                //Used to update the task by submit.
                $scope.update2 = function(){
                    var input = $(document.createElement("input"));
                    input.attr('type', 'hidden')
                        .attr('name', "users")
                        .attr('value', $scope.allData.taskUsers);
                    $("#taskUpdateForm").append(input);//('<input type="hidden" name="users" value="'+$scope.allData.taskUsers+'">');
                    $("#taskUpdateForm").submit();
                };
            }

            function deleteTaskDialogController($scope, $mdDialog, $http, currentTask){
                $scope.task = currentTask;

                $scope.closeDialog = function(){
                    $mdDialog.hide();
                 };


               $scope.delete=function(){
                    $http({
                        method: 'DELETE',
                        url: window.location.pathname+'/../../api/tasks/'+$scope.task.id,
                        dataType: 'json',
                        headers: {'Content-Type': 'application/json'}
                    })
                    .then(function success(response){
                         $scope.closeDialog();
                    }, function error(response){
                        console.log("Error:" +response.statusText);
                    });
                 };
            }

        </script>

<div ng-cloak ng-app="MyApp" ng-controller="tasksController" ng-init="userRol == 'developer' ? getTasksOfUser() : getAllTasks()">

    <md-list>
        <md-button class="md-raised md-primary" ng-click="showCreateTaskDialog($event)" ng-if="userRol != 'developer'">New Task</md-button>
        <md-divider></md-divider>
        <md-divider></md-divider>
        <md-list-item style="font-size: large" ng-model="prueba">
            <span style="width: 15%">Title</span>
            <span style="width: 60%">Description</span>
            <span style="width: 25%">Owner</span>
        </md-list-item>
        <md-divider></md-divider>
        <md-divider></md-divider>
        <div ng-repeat="task in tasksList track by $index">
            <md-list-item ng-click="showUpdateTaskDialog($event, task)">

                <span style="width: 15%">{[{task.title}]}</span>
                <span style="width: 60%">{[{task.content}]}</span>
                <span style="width: 25%">{[{task.who_create}]}</span>
                <div>
                    <md-button style="width: 10%" class="md-raised md-secondary" ng-click="deleteTask($event, task)" ng-if="userRol != 'developer'">X</md-button> <!--sustituir por el icono de abajo-->
                </div>

            </md-list-item>
<!--            <md-icon md-svg-src="/es/ic_delete_black_24px.svg" aria-label="android "></md-icon>-->
            <md-divider></md-divider>
        </div>
    </md-list>
</div>








{% endblock %}
