{% extends 'intranetBundle::layout.html.twig' %}

 {% block contenido %}
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
        <link rel="stylesheet" href="http://ajax.googleapis.com/ajax/libs/angular_material/1.0.0/angular-material.min.css">
        <link rel="stylesheet" href="style.css">
        <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?libraries=places&sensor=false"></script>
        <script src="moment.min.js"></script>
        <script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
        <script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-animate.min.js"></script>
        <script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-aria.min.js"></script>
        <script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-messages.min.js"></script>
        <script src="http://ajax.googleapis.com/ajax/libs/angular_material/1.0.0/angular-material.min.js"></script>
        <script src="http:////ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular-route.js"></script>
        <script src="http://ngmaterial.assets.s3.amazonaws.com/svg-assets-cache.js"></script>
        <script src="https://code.jquery.com/jquery-1.12.3.min.js"   integrity="sha256-aaODHAgvwQW1bFOGXMeX+pC4PZIPsvn2h1sArYOhgXQ="   crossorigin="anonymous"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.7/angular-resource.min.js"></script>
        <script src="//cdnjs.cloudflare.com/ajax/libs/angular-material-icons/0.7.0/angular-material-icons.min.js"></script> 
        <script>
            var app = angular.module('MyApp',['ngRoute', 'ngMaterial', 'ngMessages', 'material.svgAssetsCache', 'ngMdIcons']);
            app.controller('tabsController', tabsController);
            app.controller('formHeaderController', formHeaderController);
            app.controller('dateRangeController', dateRangeController);
            app.controller('vacationController', dateRangeController);
            app.controller('expensesController', expensesController);
            app.controller('overtimeHoursController', overtimeHoursController);
            app.controller('overtimeHoursController2', overtimeHoursController2);
            app.controller('workAtHomeController', workAtHomeController);
            app.controller('submitController', submitController);
            app.controller('historicController', historicController);
            app.directive('zeroTimeDirective', function(){
                
                //https://blog.umur.io/2013/07/02/angularjs-directives-using-isolated-scope-with-attributes/
                //https://johnpapa.net/angularjss-controller-as-and-the-vm-variable/
                return{
                    restrict: 'A',
                    require: 'ngModel',
                    scope: {theOtherValue: "&theOtherTimeValue"},
                    link: function(scope, element, attr, ctrl){
                        
                        //var otherSideValue = attr.zeroTimeDirective;
                        var otherSideValue = scope.theOtherValue();
                        
                        ctrl.$parsers.unshift(function(value){
                            console.log(attr);
                            console.log("seleccionado: "+value+"|| otrolado: "+otherSideValue);
                            if (value == 0 && otherSideValue == 0)
                                ctrl.$setValidity('noZero', false);
                            else
                                ctrl.$setValidity('noZero', true);
                            
                            return value;
                        });
                    }
                };
            });
            
            app.directive('noMatchingDates', function(){
                
                return{
                    restrict: 'A',
                    require: 'ngModel',
                    link: function(scope, element, attr, ctrl){
                        
                        var dates = attr.noMatchingDates;
                        
                        ctrl.$parsers.unshift(function(value){
                            
                            console.log(dates);
                            console.log(dates);
                            console.log(typeof dates);
                            var arrayOfDates = eval(dates);
                            console.log(typeof arrayOfDates);
                            console.log(arrayOfDates);
                            
                            arrayOfDates.forEach(function(currentDate, index){
                                
                                /*if (value.getDay() == currentDate.date.getDay())
                                    if(value.getMonth() == currentDate.date.getMonth())
                                        if(value.getFullYear() == currentDate.date.getFullYear())*/
                                
                                if(moment(value).isSame(currentDate.date, 'day')){
                                    ctrl.$setValidity('matchingDates', false);
                                    return value;
                                }else
                                    ctrl.$setValidity('matchingDates', true);
                            });
                            
                            return value;
                        });
                    }
                };
            });
            
            app.config(function($mdThemingProvider) {

                // Configure a dark theme with primary foreground yellow

                $mdThemingProvider.theme('docs-dark', 'default')
                                  .primaryPalette('yellow')
                                  .dark();

            });
            
            app.config(function ($mdDateLocaleProvider) {
                $mdDateLocaleProvider.formatDate = function(date) {
                    return date ? moment(date).format('DD/MM/YYYY') : '';
                };

                $mdDateLocaleProvider.parseDate = function(dateString) {
                    var m = moment(dateString, 'DD/MM/YYYY', true);
                    return m.isValid() ? m.toDate() : new Date(NaN);
                };
            });
            
            app.directive('googleplace', function() {
                return {
                    require: 'ngModel',
                    link: function(scope, element, attrs, model) {
                        var options = {
                            types: [],
                            componentRestrictions: {}
                        };
                        scope.gPlace = new google.maps.places.Autocomplete(element[0], options);

                        google.maps.event.addListener(scope.gPlace, 'place_changed', function() {
                            scope.$apply(function() {
                                model.$setViewValue(element.val());                
                            });
                        });
                    }
                };
            });
            
            function tabsController($scope){
                $scope.returnToHistory = function() {
                    $scope.selectedIndex = 0; 
                };
            }
            
            function formHeaderController($scope, $filter){
                $scope.auxDate = new Date();
                $scope.name = "Rigoberto, un tío despierto";
            }
            
            function dateRangeController ( $scope, $filter ) {
                
                $scope.today = moment(new Date()).subtract(1, "days").toDate(); // minDate, don't touch this var. TODO: HAY QUE RESTAR UN DÍA a esta fecha para que permita seleccionar el día actual.
                $scope.startDate = new Date();
                $scope.finishDate = new Date();
                $scope.minFinishDate = $scope.startDate;
                
                //$WATCH ---> https://quizzpot.com/courses/introduccion-a-angular-js/articles/escuchando-cambios-en-el-scope-usando-el-watch
                //https://www.google.de/webhp?sourceid=chrome-instant&ion=1&espv=2&ie=UTF-8#q=como+usar+%24watch
                $scope.$watch("startDate", function(data){
                    
                    if ($scope.startDate > $scope.finishDate) //al cambiar la fecha de comienzo, si esta es mayor que la de fin, la de fin se actualiza a la de comienzo, si no, la de fin se queda igual
                        $scope.finishDate = $scope.startDate;
                    
                    $scope.minFinishDate = $scope.startDate;    
                    
                });
                
                $scope.$watch("minFinishDate", function(data){
                    
                    console.log(data);
                    $scope.minFinishDate = $scope.startDate;
                });
            }
            
            function vacationController($scope, $http){
                
                $scope.sub = function(){
                    $http({
                        method: 'POST',
                        url: 'respuesta.php',
                       
                    })
                    .then(function success(response){
                        
                        $scope.returnToHistory();
                        alert("asd");
                        
                    }, function error(response){
                        alert("Error:" +response.statusText);
                    });
                }
            }
            
            function expensesController($scope, $http){
                
                $scope.data = {
                    seller: "",
                    amount: null,
                    concept: "",
                    today: moment(new Date()).subtract(1, "days").toDate() //using moment library to substract 1 day to the date in order to let the current date be selected again. Then parsing the moment object to date object.
                }
                
                $scope.dateSelected = new Date(); // this date if for the date-bingind with the datepicker, the other one ($scope.data.today) is used to specify the min date limit.
                
                $scope.sub = function(){
                    $http({
                        method: 'POST',
                        url: 'respuesta.php',
                       
                    })
                    .then(function success(response){
                        
                        $scope.returnToHistory();
                        
                    }, function error(response){
                        alert("Error:" +response.statusText);
                    });
                    
                    $.each($('#tab0').siblings(), function(i, val){
                        $(this).attr('md-active', 'false');
                    });
                    $('#tab0').attr('md-active', 'true');
                    $('md-tabs').attr('md-selected', '0');
                    
                }
            }
            
            function businessTripController($scope, $mdSelectOnFocus, $http){
                
                $scope.auxData = "";
                
                $scope.sub = function(){
                    $http({
                        method: 'POST',
                        url: 'respuesta.php',
                       
                    })
                    .then(function success(response){
                        
                        $scope.returnToHistory();
                        alert("asd");
                        
                    }, function error(response){
                        alert("Error:" +response.statusText);
                    });
                }
                
            }
            
            function overtimeHoursController2($scope, $http, $filter){
                
                function overtime(){
                    this.date = new Date();
                    this.hours = 0;
                    this.minutes = 0;
                }
                
                $scope.today = moment(new Date()).subtract(1, "days").toDate(); //using moment library to substract 1 day to the date in order to let the current date be selected again. Then parsing the moment object to date object.
                
                $scope.dateSelected = new Date();// this date if for the date-bingind with the datepicker, the other one ($scope.data.today) is used to specify the min date limit.
                
                $scope.time = {
                    hours : [0, 1, 2, 3, 4, 5, 6, 7, 8],
                    minutes : [0, 15, 30, 45],
                    selectedHour: 0,
                    selectedMinute: 0
                }
                
                $scope.overtimeList = [];
                
                $scope.showData = function(){
                  
                    $scope.overtimeList.forEach(function(item, index){
                        console.log("Fecha: "+item.date+" || Hora: "+item.hours+" || Minutos: "+item.minutes);
                    });
                };
                
                $scope.overtimeList.forEach(function(current, index){
                    
                    $scope.$watch('overtimeList', function(newValue){
                        $scope.overtimeList.date = $filter('date')(newValue[index].date, 'yyyy/MM/dd'); 
                    });
                });
                
                
                $scope.hoursSelected = 0;
                $scope.minutesSelected = 0;
                
                $scope.addDateField2 = function(){
                    var OTaux = new overtime();
                    
                    OTaux.date = $scope.dateSelected;
                    OTaux.hours = $scope.hoursSelected;
                    OTaux.minutes = $scope.minutesSelected;
                    
                    $scope.overtimeList.push(OTaux);
                    
                    //TODO: trying to set "validity:filtered" to true or at least, to set the border-bottom-color property to grey.
                    //$('.md-datepicker-input-container.md-datepicker-invalid').css('border-bottom-color', 'rgb(224,224,224) !important');
                    /*$scope.overtimeHoursForm.OTdate.$error = {};
                    $scope.overtimeHoursForm.OTdate.$error = [];
                    
                    $scope.overtimeHoursForm.OTdate.$setValidity('filtered', true);
                    
                    $scope.overtimeHoursForm.OTdate.$valid = true;
                    $scope.overtimeHoursForm.OTdate.$invalid = false;
                    
                    console.log("------------------------------------");
                    console.log("OTdate.$error: "+$scope.overtimeHoursForm.OTdate.$error);
                    console.log($scope.overtimeHoursForm.OTdate.$error);
                    console.log("OTdate: "+$scope.overtimeHoursForm.OTdate);
                    console.log($scope.overtimeHoursForm.OTdate);
                    console.log("overtimeForm: "+$scope.overtimeHoursForm.$error);
                    console.log($scope.overtimeHoursForm.$error);
                    console.log("------------------------------------");*/
                    
                    
                    
                    
                    //$(".dtNoSpaceAtLeft").addClass('pepitogrillo');
                    //$(".dtNoSpaceAtLeft").removeClass('ng-invalid-filtered');
                    //md-datepicker-invalid
                    // ng-valid-mindate ng-valid-maxdate ng-valid-valid pepitogrillo ng-dirty ng-valid-parse ng-invalid ng-invalid-filtered
                }
                
                $scope.removeElement = function(index){
                    
                    $scope.overtimeList.splice(index, 1);
                };
                
                $scope.timeFlag = true;
                
                $scope.timeValidation = function(hours, minutes){
                
                    if (hours == 0 && minutes == 0)
                        $scope.timeFlag = true;
                    else
                        $scope.timeFlag = false;
                };
                
                $scope.isEmptyList = function(){
                    console.log($.isEmptyObject($scope.overtimeList));
                    return $.isEmptyObject($scope.overtimeList);
                };
                
                $scope.alreadySelectedDatesDates = function(date){
                    
                    if ($scope.overtimeList.length > 0)
                        for (var i = 0; i < $scope.overtimeList.length; i++)
                            if (moment(date).isSame($scope.overtimeList[i].date, 'day'))
                                return false;
                    
                    return true;
                };
            }
            
            function overtimeHoursController($scope, $http){
                
                function overtime(){
                    this.date = new Date();
                    this.hours = 0;
                    this.minutes = 0;
                }
                
                $scope.today = moment(new Date()).subtract(1, "days").toDate(); //using moment library to substract 1 day to the date in order to let the current date be selected again. Then parsing the moment object to date object.
                
                $scope.dateSelected = new Date();// this date if for the date-bingind with the datepicker, the other one ($scope.data.today) is used to specify the min date limit.
                
                $scope.time = {
                    hours : [0, 1, 2, 3, 4, 5, 6, 7, 8],
                    minutes : [0, 15, 30, 45],
                    selectedHour: 0,
                    selectedMinute: 0
                }
                
                $scope.overtimeList = [new overtime()];
                
                $scope.addDateField = function(){
                    $scope.overtimeList.push(new overtime());
                }
                
                $scope.showData = function(){
                  
                    $scope.overtimeList.forEach(function(item, index){
                        console.log("Fecha: "+item.date+" || Hora: "+item.hours+" || Minutos: "+item.minutes);
                    });
                };
                
                $scope.alreadySelectedDatesDates = function(date){
                    
                    /*var dias = [];
                    dias.push(moment().add(1, 'd'));
                    dias.push(moment().add(3, 'd'));
                    dias.push(moment().add(4, 'd'));*/
                    
                    for (var i = 0; i < $scope.overtimeList.length; i++)
                        if (moment(date).isSame($scope.overtimeList[i].date, 'day'))
                            return false;
                        else
                            return true;
                    
                    /*dias.forEach(function(current, index){
                        
                        if (moment(date).isSame(current, 'day'))
                            return false;
                        else
                            return true;
//                        return !(moment(date).isSame(current.date, 'day'));
                        
                    });*/
                    
                };
                
                
                $scope.sub = function(){
                    $http({
                        method: 'POST',
                        url: 'respuesta.php',
                       
                    })
                    .then(function success(response){
                        
                        $scope.returnToHistory();
                        alert("asd");
                        
                    }, function error(response){
                        alert("Error:" +response.statusText);
                    });
                }
                
                /*$scope.updateHours = function(index, hoursSelected){
                    
                    $scope.$apply(function(){
                        $scope.overtimeList[index].hours = hoursSelected;
                    });
                    //$scope.overtimeList[index].hours = hoursSelected;
                    //console.log(index+"-"+$scope.overtimeList[index].minutes);
                };
                
                $scope.updateHours = function(index, minutesSelected){
                    
                    $scope.$apply(function(){
                        $scope.overtimeList[index].minutes = minutesSelected;
                    });
                    //$scope.overtimeList[index].hours = hoursSelected;
                    //console.log(index+"-"+$scope.overtimeList[index].minutes);
                };*/
                
                /*$scope.$watch('time.selectedHour', function(){
                    $scope.$digest();
                });
                $scope.$watch('time.selectedMinute', function(){
                    $scope.$digest();
                });*/
                
                //En principio estos tres métodos no sirven ya que al estar los campos bindeados con ng-model se insertan automaticamente.
                /*$scope.changeDate = function(index, dateSelected){
                    
                    //$scope.overtimeList[index].date = dateSelected;
                };
                
                $scope.insertHours = function(index, hoursSelected){
                    
                    //$scope.overtimeList[index].hours = hoursSelected;
                    console.log(index+"-"+$scope.overtimeList[index].minutes);
                };
                
                $scope.insertMinutes = function(index, minutesSelected){
                    
                    //$scope.overtimeList[index].minutes = minutesSelected;
                    console.log(index+"-"+$scope.overtimeList[index].hours);
                };*/
            
            }
            
            function workAtHomeController($scope, $http){
                    
                $scope.today = moment(new Date()).subtract(1, "days").toDate(); //using moment library to substract 1 day to the date in order to let the current date be selected again. Then parsing the moment object to date object.

                $scope.dateSelected = new Date();// this date if for the date-bingind with the datepicker, the other one ($scope.data.today) is used to specify the min date limit.

                $scope.reason = "";
                $scope.wholeOrHalfDay = "wholeDay";
            }
            
            function submit($http, url, data, success, error){
                    
                $http({
                    method: 'POST',
                    url: url,
                    data: data,
                    dataType: 'json',
                    headers: {'Content-Type': 'application/json'}
                }).then(success, error);
            }
            
            function historicController($scope, $http, $mdDialog){
                
                //por qué esto no actualiza la vista directamente y el siguiente métdo sí?
                /*$scope.fillList = function(){
                
                    submit($http, 'model.php', null, function(response){
                        //present info
                        
                        $timeout(function(){
                            $scope.formsList = response.data;
                        });
                        console.log("SUCCESS");
                    }, function(response){
                        //manage error
                        console.log("ERROR");
                    });
                };*/
                
                /*
                
                $scope.formType = ['All', 'Vacation', 'Expenses', 'Business trip', 'Overtime hours', 'Work at home'];
                
                $scope.formStatus = ['All', 'Accepted', 'Rejected', 'Pending'];*/
                
                $scope.filters = {
                    formType: 'All',
                    formStatus: 3
                };
                
                //form filter status legend
                //0 -> Rejected
                //1 -> Accepted
                //2 -> Pending
                //3 -> All
                
                $scope.fillList = function(){
                    
                    $http({
                        method: 'POST',
                        url: 'model.php',
                        data: null,
                        dataType: 'json',
                        headers: {'Content-Type': 'application/json'}
                    }).then(function success(response){
                        
                        $scope.formsList = response.data;
                        $scope.filteredFormsList = response.data;
                    }, function error(response){
                        //manage error
                        console.log("ERROR: "+response.statusText);
                    });
                }
                
                $scope.$watchGroup(['filters.formType', 'filters.formStatus'], function(){
                    
                    $scope.filteredFormsList = [];
                    if($scope.filters.formType === "All" && $scope.filters.formStatus == 3){
                        $scope.filteredFormsList = $scope.formsList;
                    }else{
                        $.each($scope.formsList, function(index, current){

                            if($scope.filters.formType === "All"  && $scope.filters.formStatus != 3){
                                if(current.status == $scope.filters.formStatus)
                                    $scope.filteredFormsList.push(current);
                            }else if($scope.filters.formType !== "All" && $scope.filters.formStatus == 3){
                                    if(current.type === $scope.filters.formType)
                                        $scope.filteredFormsList.push(current);
                            }else{
                                if(current.status == $scope.filters.formStatus && current.type === $scope.filters.formType)
                                    $scope.filteredFormsList.push(current);
                            }
                        });
                    }
                    
                });
                
                $scope.showFormDetails = function(ev, form) {
                    
                    $mdDialog.show({
                        templateUrl: 'dialogTemplates/mainDialogTemplate.tmpl.html',
                        locals: {
                            currentForm: form
                        }, 
                        parent: angular.element(document.body),
                        targetEvent: ev,
                        clickOutsideToClose:true,
                        controller: dialogController
                    });
                }
            }
            
            function dialogController($scope, $mdDialog, currentForm){
                
                $scope.form = currentForm;
                
                switch($scope.form.type){
                    case "Expenses":
                        $scope.currentTemplateForm = "dialogTemplates/expensesDialog.tmpl.html";
                        break;
                    case "OvertimeHours":
                        $scope.currentTemplateForm = "dialogTemplates/hoursDialog.tmpl.html";
                        break;
                    case "Vacation":
                        $scope.currentTemplateForm = "dialogTemplates/vacationDialog.tmpl.html";
                        break;
                    case "BusinessTrip":
                        $scope.currentTemplateForm = "dialogTemplates/businessTripDialog.tmpl.html";
                        break;
                    case "WorkAtHome":
                        $scope.currentTemplateForm = "dialogTemplates/workHomeDialog.tmpl.html";
                        break;
                }
                
                $scope.closeDialog = function() {
                    $mdDialog.hide();
                }
            }
            
            function submitController($scope){
                
            }
            
            
        </script>

        <div ng-cloak="" class="tabsdemoStaticTabs" ng-app="MyApp" ng-controller="tabsController">
            <md-content class="md-padding">
                <md-tabs id="tabs" class="md-accent" md-selected="selectedIndex" md-align-tabs="top" md-dynamic-height>
                    <md-tab id="tab0">
                        <md-tab-label>Historico</md-tab-label>
                        <md-tab-body>
                            <div ng-include="'historic.html'"></div>
                            <div ng-include="'historic.html'"></div>
                        </md-tab-body>
                    </md-tab>
                    <md-tab id="tab1">
                        <md-tab-label>Vacation</md-tab-label>
                        <md-tab-body>
                            <div ng-include="'vacationForm.html'"></div>
                        </md-tab-body>
                    </md-tab>
                    <md-tab id="tab1">
                        <md-tab-label>VacationTest</md-tab-label>
                        <md-tab-body>
                            <div ng-include="'vacationFormTest.html'"></div>
                        </md-tab-body>
                    </md-tab>
                    <md-tab id="tab2">
                        <md-tab-label>Expenses</md-tab-label>
                            <md-tab-body>
                                <div ng-include="'expensesForm.html'"></div>
                            </md-tab-body>
                    </md-tab>
                    <md-tab id="tab3">
                        <md-tab-label>business trip</md-tab-label>
                        <md-tab-body>
                            <div ng-include="'businessTripForm.html'"></div>
                        </md-tab-body>
                    </md-tab>
                    <md-tab id="tab0">
                        <md-tab-label>Overtime hoursCool</md-tab-label>
                        <md-tab-body>
                            <div ng-include="'overtimeHoursForm2.html'"></div>
                        </md-tab-body>
                    </md-tab>
                    <md-tab id="tab4">
                        <md-tab-label>Overtime hours</md-tab-label>
                        <md-tab-body>
                            <div ng-include="'overtimeHoursForm.html'"></div>
                        </md-tab-body>
                    </md-tab>
                    <md-tab id="tab5">
                        <md-tab-label>Work at home</md-tab-label>
                        <md-tab-body>
                            <div ng-include="'workAtHomeForm.html'"></div>
                        </md-tab-body>
                    </md-tab>
                </md-tabs>
            </md-content>
            
        </div>
        
        

{% endblock %}